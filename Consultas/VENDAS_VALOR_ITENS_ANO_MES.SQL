-- Primeiramente estava com a ideia de montar um relatório de informações de vendas e outros dados anuais e montei esse código.  

SELECT 
    EXTRACT(YEAR FROM NF.DATAEMISSAO_NF) AS ANO,
    COUNT(DISTINCT NF.AUTOINC_NF) AS QTD_VENDAS,
    SUM(NF.VALORTOTAL_NF) AS VALOR_VENDIDO,
    ROUND(SUM(DF.QTDETOTALITENS_DOCFAT)) AS QTD_ITENS
FROM NOTA_FISCAL NF
INNER JOIN DOCUMENTO_FATURA DF 
    ON DF.CODIGO_DOCFAT = NF.LISTA_PEDIDOS_NF AND NF.LISTA_PEDIDOS_NF NOT LIKE '%/%' -- Retirei alguns registros que contavam como string, mas é irrelevante, pois são 26 registros apenas de assistência.
GROUP BY 
    EXTRACT(YEAR FROM NF.DATAEMISSAO_NF);

-- Rodou certinho, mas precisava ser lapidado ainda referente a qualidade dos dados, o banco que uso acaba sendo um pouco sujo, então limpei e peguei somente dados válidos e otimizei a consulta.

WITH ANUAL AS (
SELECT
	ANO,
	QTD_VENDAS,
	VALOR_VENDIDO,
	TICKET_MEDIO,
	MAIOR_VENDA,
	QTD_ITENS,
	QTD_MEDIA,
	CLIENTES_CNPJ,
	CLIENTES_CPF,
	CLIENTES_NOVOS_CNPJ,
	LAG(VALOR_VENDIDO) OVER () AS VALOR_ANTERIOR
FROM (
	SELECT 
		EXTRACT(YEAR FROM NF.DATAEMISSAO_NF) AS ANO,
		COUNT(DISTINCT NF.AUTOINC_NF) AS QTD_VENDAS,
		SUM(NF.VALORTOTAL_NF) AS VALOR_VENDIDO,
		AVG(NF.VALORTOTAL_NF) AS TICKET_MEDIO,
		MAX(NF.VALORTOTAL_NF) AS MAIOR_VENDA,
		ROUND(SUM(DF.QTDETOTALITENS_DOCFAT)) AS QTD_ITENS,
		ROUND(AVG(DF.QTDETOTALITENS_DOCFAT)) AS QTD_MEDIA,
		COUNT(DISTINCT CASE WHEN P.TIPO_PESSOA = 'J' THEN DF.CLIENTE_DOCFAT END) AS CLIENTES_CNPJ,
		COUNT(DISTINCT CASE WHEN P.TIPO_PESSOA = 'F' THEN DF.CLIENTE_DOCFAT END) AS CLIENTES_CPF,
		COUNT(DISTINCT CASE WHEN P.TIPO_PESSOA = 'J' AND 
			EXTRACT(YEAR FROM P.DATAHORAINCLUSAO_PESSOA) = EXTRACT(YEAR FROM NF.DATAEMISSAO_NF) 
				THEN DF.CLIENTE_DOCFAT END) AS CLIENTES_NOVOS_CNPJ
	FROM NOTA_FISCAL NF
        INNER JOIN DOCUMENTO_FATURA DF ON DF.CODIGO_DOCFAT = NF.LISTA_PEDIDOS_NF AND NF.LISTA_PEDIDOS_NF NOT LIKE '%/%'
        INNER JOIN PESSOA P ON P.CODIGO_PESSOA = DF.CLIENTE_DOCFAT
  WHERE 
		NF.TRANSACAO_NF IN (2,20,110,119,121,350) AND
		DF.CLASSIFICACAO_DOCFAT = 1      
  GROUP BY EXTRACT(YEAR FROM NF.DATAEMISSAO_NF)
    ) SUB
)
SELECT
    ANO,
    QTD_VENDAS,
    VALOR_VENDIDO,
    ROUND(((VALOR_VENDIDO - VALOR_ANTERIOR) / VALOR_ANTERIOR) * 100, 2) AS PORC_CRESC_VALOR,
    TICKET_MEDIO,
    MAIOR_VENDA,
    QTD_ITENS,
    QTD_MEDIA,
    CLIENTES_CNPJ,
    CLIENTES_CPF,
    CLIENTES_NOVOS_CNPJ
FROM ANUAL
ORDER BY ANO;



-- E veio na cabeça também, pq não fazer um mensal em comparativo ao mesmo mês de outros anos, ai montei 2 ctes com uma subquery em cada.
WITH ANUAL AS (
SELECT
	ANO,
	QTD_VENDAS,
	VALOR_VENDIDO,
	TICKET_MEDIO,
	MAIOR_VENDA,
	QTD_ITENS,
	QTD_MEDIA,
	CLIENTES_CNPJ,
	CLIENTES_CPF,
	LAG(VALOR_VENDIDO) OVER () AS VALOR_ANTERIOR
FROM (
	SELECT 
		EXTRACT(YEAR FROM NF.DATAEMISSAO_NF) AS ANO,
		COUNT(DISTINCT NF.AUTOINC_NF) AS QTD_VENDAS,
		SUM(NF.VALORTOTAL_NF) AS VALOR_VENDIDO,
		AVG(NF.VALORTOTAL_NF) AS TICKET_MEDIO,
		MAX(NF.VALORTOTAL_NF) AS MAIOR_VENDA,
		ROUND(SUM(DF.QTDETOTALITENS_DOCFAT)) AS QTD_ITENS,
		ROUND(AVG(DF.QTDETOTALITENS_DOCFAT)) AS QTD_MEDIA,
		COUNT(DISTINCT CASE WHEN P.TIPO_PESSOA = 'J' THEN DF.CLIENTE_DOCFAT END) AS CLIENTES_CNPJ,
		COUNT(DISTINCT CASE WHEN P.TIPO_PESSOA = 'F' THEN DF.CLIENTE_DOCFAT END) AS CLIENTES_CPF
	FROM NOTA_FISCAL NF
        INNER JOIN DOCUMENTO_FATURA DF ON DF.CODIGO_DOCFAT = NF.LISTA_PEDIDOS_NF AND NF.LISTA_PEDIDOS_NF NOT LIKE '%/%'
        INNER JOIN PESSOA P ON P.CODIGO_PESSOA = DF.CLIENTE_DOCFAT
        WHERE 
		NF.TRANSACAO_NF IN (2,20,110,119,121,350) AND
		DF.CLASSIFICACAO_DOCFAT = 1
        GROUP BY EXTRACT(YEAR FROM NF.DATAEMISSAO_NF)
    ) SUB
),
MENSAL AS (
SELECT
	ANOM,
	MESM,
	QTD_VENDASM,
	VALOR_VENDIDOM,
	TICKET_MEDIOM,
	MAIOR_VENDAM,
	QTD_ITENSM,
	QTD_MEDIAM,
	CLIENTES_CNPJM,
	CLIENTES_CPFM,
	LAG(VALOR_VENDIDOM) OVER () AS VALOR_ANTERIORM
FROM (	
SELECT
	EXTRACT(YEAR FROM NFM.DATAEMISSAO_NF) AS ANOM,
	EXTRACT(MONTH FROM NFM.DATAEMISSAO_NF) AS MESM,
	COUNT(DISTINCT NFM.AUTOINC_NF) AS QTD_VENDASM,
	SUM(NFM.VALORTOTAL_NF) AS VALOR_VENDIDOM,
	AVG(NFM.VALORTOTAL_NF) AS TICKET_MEDIOM,
	MAX(NFM.VALORTOTAL_NF) AS MAIOR_VENDAM,
	ROUND(SUM(DFM.QTDETOTALITENS_DOCFAT)) AS QTD_ITENSM,
	ROUND(AVG(DFM.QTDETOTALITENS_DOCFAT)) AS QTD_MEDIAM,
	COUNT(DISTINCT CASE WHEN PM.TIPO_PESSOA = 'J' THEN DFM.CLIENTE_DOCFAT END) AS CLIENTES_CNPJM,
	COUNT(DISTINCT CASE WHEN PM.TIPO_PESSOA = 'F' THEN DFM.CLIENTE_DOCFAT END) AS CLIENTES_CPFM
FROM NOTA_FISCAL NFM
	INNER JOIN DOCUMENTO_FATURA DFM ON DFM.CODIGO_DOCFAT = NFM.LISTA_PEDIDOS_NF AND NFM.LISTA_PEDIDOS_NF NOT LIKE '%/%'
	INNER JOIN PESSOA PM ON PM.CODIGO_PESSOA = DFM.CLIENTE_DOCFAT
WHERE 
	NFM.TRANSACAO_NF IN (2,20,110,119,121,350) AND
	DFM.CLASSIFICACAO_DOCFAT = 1
GROUP BY 
	EXTRACT(YEAR FROM NFM.DATAEMISSAO_NF),
	EXTRACT(MONTH FROM NFM.DATAEMISSAO_NF)
) SUBM )
SELECT
    ANO,
    QTD_VENDAS,
    VALOR_VENDIDO,
    ROUND(((VALOR_VENDIDO - VALOR_ANTERIOR) / VALOR_ANTERIOR) * 100, 2) AS PORC_CRESC_VALOR,
    TICKET_MEDIO,
    MAIOR_VENDA,
    QTD_ITENS,
    QTD_MEDIA,
    CLIENTES_CNPJ,
    CLIENTES_CPF,
    ANOM,
    MESM,
    QTD_VENDASM,
   	VALOR_VENDIDOM,
   	ROUND(((VALOR_VENDIDOM - VALOR_ANTERIORM) / VALOR_ANTERIORM) * 100, 2) AS PRC_CRESC_VALORM,
   	TICKET_MEDIOM,
   	MAIOR_VENDAM,
   	QTD_ITENSM,
   	QTD_MEDIAM,
   	CLIENTES_CNPJM,
   	CLIENTES_CPFM
FROM ANUAL
	LEFT JOIN MENSAL ON ANO = ANOM
ORDER BY ANOM, MESM;

-- eu achei que ia ficar separado bonitinho.
-- Mas acabou que misturou algumas colunas, ai pensei, vou ter que fazer 2 fontes de dados diferentes e unificalas no relatório, e então montei a cte anual e a cte mensal.

WITH ANUAL AS (
SELECT
	ANO,
	QTD_VENDAS,
	VALOR_VENDIDO,
	TICKET_MEDIO,
	MAIOR_VENDA,
	QTD_ITENS,
	QTD_MEDIA,
	CLIENTES_CNPJ,
	CLIENTES_CPF,
	LAG(VALOR_VENDIDO) OVER () AS VALOR_ANTERIOR
FROM (
	SELECT 
		EXTRACT(YEAR FROM NF.DATAEMISSAO_NF) AS ANO,
		COUNT(DISTINCT NF.AUTOINC_NF) AS QTD_VENDAS,
		SUM(NF.VALORTOTAL_NF) AS VALOR_VENDIDO,
		AVG(NF.VALORTOTAL_NF) AS TICKET_MEDIO,
		MAX(NF.VALORTOTAL_NF) AS MAIOR_VENDA,
		ROUND(SUM(DF.QTDETOTALITENS_DOCFAT)) AS QTD_ITENS,
		ROUND(AVG(DF.QTDETOTALITENS_DOCFAT)) AS QTD_MEDIA,
		COUNT(DISTINCT CASE WHEN P.TIPO_PESSOA = 'J' THEN DF.CLIENTE_DOCFAT END) AS CLIENTES_CNPJ,
		COUNT(DISTINCT CASE WHEN P.TIPO_PESSOA = 'F' THEN DF.CLIENTE_DOCFAT END) AS CLIENTES_CPF
	FROM NOTA_FISCAL NF
        INNER JOIN DOCUMENTO_FATURA DF ON DF.CODIGO_DOCFAT = NF.LISTA_PEDIDOS_NF AND NF.LISTA_PEDIDOS_NF NOT LIKE '%/%'
        INNER JOIN PESSOA P ON P.CODIGO_PESSOA = DF.CLIENTE_DOCFAT
  WHERE 
		NF.TRANSACAO_NF IN (2,20,110,119,121,350) AND
		DF.CLASSIFICACAO_DOCFAT = 1      
  GROUP BY EXTRACT(YEAR FROM NF.DATAEMISSAO_NF)
    ) SUB
)
SELECT
    ANO,
    QTD_VENDAS,
    VALOR_VENDIDO,
    ROUND(((VALOR_VENDIDO - VALOR_ANTERIOR) / VALOR_ANTERIOR) * 100, 2) AS PORC_CRESC_VALOR,
    TICKET_MEDIO,
    MAIOR_VENDA,
    QTD_ITENS,
    QTD_MEDIA,
    CLIENTES_CNPJ,
    CLIENTES_CPF
FROM ANUAL
ORDER BY ANO;

-- E a mensal

WITH MENSAL AS (
SELECT
	ANOM,
	MESM,
	QTD_VENDASM,
	VALOR_VENDIDOM,
	TICKET_MEDIOM,
	MAIOR_VENDAM,
	QTD_ITENSM,
	QTD_MEDIAM,
	CLIENTES_CNPJM,
	CLIENTES_CPFM,
	LAG(VALOR_VENDIDOM) OVER (PARTITION BY MESM ORDER BY ANOM) AS VALOR_ANTERIORM
FROM (
SELECT
	EXTRACT(YEAR FROM NF.DATAEMISSAO_NF) AS ANOM,
	EXTRACT(MONTH FROM NF.DATAEMISSAO_NF) AS MESM,
	COUNT(DISTINCT NF.AUTOINC_NF) AS QTD_VENDASM,
	SUM(NF.VALORTOTAL_NF) AS VALOR_VENDIDOM,
	AVG(NF.VALORTOTAL_NF) AS TICKET_MEDIOM,
	MAX(NF.VALORTOTAL_NF) AS MAIOR_VENDAM,
	ROUND(SUM(DF.QTDETOTALITENS_DOCFAT)) AS QTD_ITENSM,
	ROUND(AVG(DF.QTDETOTALITENS_DOCFAT)) AS QTD_MEDIAM,
	COUNT(DISTINCT CASE WHEN P.TIPO_PESSOA = 'J' THEN DF.CLIENTE_DOCFAT END) AS CLIENTES_CNPJM,
	COUNT(DISTINCT CASE WHEN P.TIPO_PESSOA = 'F' THEN DF.CLIENTE_DOCFAT END) AS CLIENTES_CPFM
FROM NOTA_FISCAL NF
	INNER JOIN DOCUMENTO_FATURA DF ON DF.CODIGO_DOCFAT = NF.LISTA_PEDIDOS_NF AND NF.LISTA_PEDIDOS_NF NOT LIKE '%/%'
	INNER JOIN PESSOA P ON P.CODIGO_PESSOA = DF.CLIENTE_DOCFAT
WHERE 
	NF.TRANSACAO_NF IN (2,20,110,119,121,350) AND
	DF.CLASSIFICACAO_DOCFAT = 1
GROUP BY
	EXTRACT(YEAR FROM NF.DATAEMISSAO_NF),
	EXTRACT(MONTH FROM NF.DATAEMISSAO_NF)
ORDER BY MESM, ANOM) SUB
)
SELECT
    ANOM,
    MESM,
    QTD_VENDASM,
    VALOR_VENDIDOM,
    ROUND(((VALOR_VENDIDOM - VALOR_ANTERIORM) / VALOR_ANTERIORM) * 100, 2) AS PORC_CRESC_VALORM,
    TICKET_MEDIOM,
    MAIOR_VENDAM,
    QTD_ITENSM,
    QTD_MEDIAM,
    CLIENTES_CNPJM,
    CLIENTES_CPFM
FROM MENSAL;                                                                         

