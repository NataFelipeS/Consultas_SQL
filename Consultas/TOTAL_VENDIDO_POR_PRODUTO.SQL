WITH PRODUTOS AS (
SELECT
	I.CODIGO_ITEM AS CODIGO_PRODUTO,
	I.DESCRICAO_ITEM AS NOME_ITEM,
	C.DESCRICAO_COR AS NOME_COR,
	A.DESCRICAO_ACABAMENTO AS NOME_ACABAMENTO,
  I.CODIGO_ITEM||'|'||c.codigo_cor||'|'||a.codigo_acabamento as SKU,
	SUM(DID.QTDEFATURADO_DOCITEMDET) AS QUANTIDADE,
	SUM(DID.QTDEFATURADO_DOCITEMDET * DID.VLRUNITARIOLIQUIDO_DOCITEMDET) AS VALOR_SKU
FROM DOCUMENTO_ITEM DI
	--INNER JOIN DOCUMENTO_ITEM DI ON DI.DOCUMENTO_DOCITEM = NF.LISTA_PEDIDOS_NF AND NF.LISTA_PEDIDOS_NF NOT LIKE '%/%'
	INNER JOIN DOCUMENTO_FATURA DF ON DF.CODIGO_DOCFAT = DI.DOCUMENTO_DOCITEM
	INNER JOIN ITEM I ON I.CODIGO_ITEM = DI.ITEM_DOCITEM
	INNER JOIN DOCUMENTO_ITEM_DETALHE DID ON DID.DOCUMENTO_DOCITEMDET = DI.DOCUMENTO_DOCITEM AND DID.AUTOINCITEM_DOCITEMDET = DI.AUTOINC_DOCITEM
	INNER JOIN COR C ON C.CODIGO_COR = DID.COR_DOCITEMDET
	INNER JOIN ACABAMENTO A ON A.CODIGO_ACABAMENTO = DID.ACABAMENTO_DOCITEMDET
WHERE
	CAST(DF.DTEMISSAO_DOCFAT AS DATE) BETWEEN Filtro(1, 0) AND Filtro(2, 0) AND /*Pode ser utilizado o campo NF.DATAEMISSAO_NF, mas eu utilizo como padrão a data do DF.*/
	--NF.TRANSACAO_NF IN (2,20,110,119,121,350) AND
	DF.CLASSIFICACAO_DOCFAT = 1
GROUP BY
	I.CODIGO_ITEM,
	I.DESCRICAO_ITEM,
	C.DESCRICAO_COR,
	A.DESCRICAO_ACABAMENTO,
  c.codigo_cor,
  a.codigo_acabamento
ORDER BY Filtro(3) DESC
)
SELECT
  P.CODIGO_PRODUTO,
	P.NOME_ITEM,
	P.NOME_COR,
	P.NOME_ACABAMENTO,
  p.SKU,
	P.QUANTIDADE,
	P.VALOR_SKU,
  ROUND(((P.VALOR_SKU / (SUM(P.VALOR_SKU) OVER (PARTITION BY P.CODIGO_PRODUTO))) * 100),2),
  SUM(P.VALOR_SKU) OVER (PARTITION BY P.CODIGO_PRODUTO) AS VALOR_ITEM,  
	SUM(P.VALOR_SKU) OVER() AS VALOR_GERAL
FROM PRODUTOS P
WHERE 
(
  Filtro(4) = 'S'
  or
  P.VALOR_SKU > 0
)
ORDER BY Filtro(3) DESC;


WITH PRODUTOS AS (
SELECT
	I.CODIGO_ITEM AS CODIGO_PRODUTO,
	I.DESCRICAO_ITEM AS NOME_ITEM,
	C.DESCRICAO_COR AS NOME_COR,
	A.DESCRICAO_ACABAMENTO AS NOME_ACABAMENTO,
  I.CODIGO_ITEM||'|'||c.codigo_cor||'|'||a.codigo_acabamento as SKU,
	SUM(DID.QTDEFATURADO_DOCITEMDET) AS QUANTIDADE,
	SUM(DID.QTDEFATURADO_DOCITEMDET * DID.VLRUNITARIOLIQUIDO_DOCITEMDET) AS VALOR_SKU
FROM DOCUMENTO_ITEM DI
	--INNER JOIN DOCUMENTO_ITEM DI ON DI.DOCUMENTO_DOCITEM = NF.LISTA_PEDIDOS_NF AND NF.LISTA_PEDIDOS_NF NOT LIKE '%/%'
	INNER JOIN DOCUMENTO_FATURA DF ON DF.CODIGO_DOCFAT = DI.DOCUMENTO_DOCITEM
	INNER JOIN ITEM I ON I.CODIGO_ITEM = DI.ITEM_DOCITEM
	INNER JOIN DOCUMENTO_ITEM_DETALHE DID ON DID.DOCUMENTO_DOCITEMDET = DI.DOCUMENTO_DOCITEM AND DID.AUTOINCITEM_DOCITEMDET = DI.AUTOINC_DOCITEM
	INNER JOIN COR C ON C.CODIGO_COR = DID.COR_DOCITEMDET
	INNER JOIN ACABAMENTO A ON A.CODIGO_ACABAMENTO = DID.ACABAMENTO_DOCITEMDET
WHERE
	CAST(DF.DTEMISSAO_DOCFAT AS DATE) BETWEEN Filtro(1, 0) AND Filtro(2, 0) AND /*Pode ser utilizado o campo NF.DATAEMISSAO_NF, mas eu utilizo como padrão a data do DF.*/
	--NF.TRANSACAO_NF IN (2,20,110,119,121,350) AND
	DF.CLASSIFICACAO_DOCFAT = 1 AND
  Filtro(5,DID.LINHA_DOCITEMDET)
GROUP BY
	I.CODIGO_ITEM,
	I.DESCRICAO_ITEM,
	C.DESCRICAO_COR,
	A.DESCRICAO_ACABAMENTO,
  c.codigo_cor,
  a.codigo_acabamento
ORDER BY Filtro(3) DESC
)
SELECT
  P.CODIGO_PRODUTO,
	P.NOME_ITEM,
	P.NOME_COR,
	P.NOME_ACABAMENTO,
  p.SKU,
	P.QUANTIDADE,
	P.VALOR_SKU,
  ROUND(((P.VALOR_SKU / (SUM(P.VALOR_SKU) OVER (PARTITION BY P.CODIGO_PRODUTO))) * 100),2) AS PORCENTAGEM,
  SUM(P.VALOR_SKU) OVER (PARTITION BY P.CODIGO_PRODUTO) AS VALOR_ITEM,  
	SUM(P.VALOR_SKU) OVER() AS VALOR_GERAL
FROM PRODUTOS P
WHERE 
(
  Filtro(4) = 'S'
  or
  P.VALOR_SKU > 0
)
ORDER BY Filtro(3) DESC;